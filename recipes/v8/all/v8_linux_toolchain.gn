import("//build/toolchain/gcc_toolchain.gni")

gcc_toolchain("gcc_x86") {
  cc = "conan_compiler_cc"
  cxx = "conan_compiler_cxx"
  ar = "ar"
  nm = "nm"

  readelf = "readelf"
  ld = cxx

  # Output linker map files for binary size analysis.
  enable_linker_map = true

  toolchain_args = {
    current_cpu = "x86"
    current_os = "linux"
    is_clang = false
  }
}


gcc_toolchain("gcc_x86_64") {
  cc = "conan_compiler_cc"
  cxx = "conan_compiler_cxx"
  ar = "ar"
  nm = "nm"
  readelf = "readelf"
  ld = cxx

  # Output linker map files for binary size analysis.
  enable_linker_map = true

  toolchain_args = {
    current_cpu = "x64"
    current_os = "linux"
    is_clang = false
  }
}


gcc_toolchain("clang_x86") {
  cc = "conan_compiler_cc"
  cxx = "conan_compiler_cxx"
  ar = "ar"
  nm = "nm"
  readelf = "readelf"
  ld = cxx

  # Output linker map files for binary size analysis.
  enable_linker_map = true

  toolchain_args = {
    current_cpu = "x86"
    current_os = "linux"
  }
}

gcc_toolchain("clang_x86_64") {
  cc = "conan_compiler_cc"
  cxx = "conan_compiler_cxx"
  ar = "ar"
  nm = "nm"
  readelf = "readelf"
  ld = cxx

  # Output linker map files for binary size analysis.
  enable_linker_map = true

  toolchain_args = {
    current_cpu = "x64"
    current_os = "linux"
  }
}
